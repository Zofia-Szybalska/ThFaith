[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://tnulmvg1kbi2"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_7duni"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_r5n3f"]
parameter_name = "hurt"
default_value_enabled = true

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_c1pr8"]
expanded_output_ports = [0]
parameter_name = "tint"
default_value_enabled = true
default_value = Color(0.972549, 0.741176, 0.701961, 1)

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_tnasp"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jtg82"]
expanded_output_ports = [0]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool hurt = false;
uniform vec4 tint : source_color = vec4(0.972549, 0.741176, 0.701961, 1.000000);



void fragment() {
// BooleanParameter:2
	bool n_out2p0 = hurt;


// Input:5
	vec4 n_out5p0 = COLOR;


// ColorParameter:3
	vec4 n_out3p0 = tint;


// VectorOp:10
	vec4 n_out10p0 = n_out5p0 + n_out3p0;


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 1.00000;
	float n_in4p2 = 0.00001;
	if(abs((n_out2p0 ? 1.0 : 0.0) - n_in4p1) < n_in4p2)
	{
		n_out4p0 = vec3(n_out10p0.xyz);
	}
	else if((n_out2p0 ? 1.0 : 0.0) < n_in4p1)
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1660, 420)
nodes/fragment/2/node = SubResource("VisualShaderNodeBooleanParameter_r5n3f")
nodes/fragment/2/position = Vector2(280, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_c1pr8")
nodes/fragment/3/position = Vector2(-100, 420)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_tnasp")
nodes/fragment/4/position = Vector2(720, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_jtg82")
nodes/fragment/5/position = Vector2(-140, 260)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_7duni")
nodes/fragment/10/position = Vector2(400, 320)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 3, 0, 10, 1, 5, 0, 4, 4, 5, 0, 4, 5, 5, 0, 10, 0, 10, 0, 4, 3, 4, 0, 0, 0)
